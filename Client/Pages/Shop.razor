@page "/shop"
@attribute [Authorize]

@inject HttpClient HttpClient
@inject IConfiguration Config
@inject ITokenService TokenService

@using API.Model;
@using IdentityModel.Client;

<h3>Shop</h3>

<div class="row">
    @if (Shops.Any())
    {
        @foreach (var shop in Shops)
        {
            <div class="col-6 col-sm-12 col-md-6 col-lg-4 col-xl-4 mh-25 mb-4">
                <div class="card shadow-sm rounded">
                    <div class="card-body">
                        <h5 class="card-title"><b>@shop.Name</b></h5>
                        <p class="card-text">@shop.Address</p>
                    </div>
                    <div class="card-footer text-muted">
                        <span>Open: @shop.TimeOpen</span>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>No coffees available</p>
    }
</div>

@code {
    private List<ShopModel> Shops = new();

    protected override async Task OnInitializedAsync()
    {
        var tokenResponse = await TokenService.GetToken("ShopAPI.read");
        HttpClient.SetBearerToken(tokenResponse.AccessToken);

        var result = await HttpClient.GetAsync(Config["apiUrl"] + "/api/shop");

        if (result.IsSuccessStatusCode)
        {
            Shops = await result.Content.ReadFromJsonAsync<List<ShopModel>>();
        }
    }
}
